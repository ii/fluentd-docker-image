# This file is a template, and might need editing before it works on your project.
# Official docker image.
stages:
  cncf-artifacts
  build

variables:
  FLUENTD_BRANCH: master

image: docker:latest

services:
  - docker:dind

before_script:
  - export BASE_URL=${BASE_URL:-$(echo $CI_PROJECT_URL |  cut -d'/' -f1-3)}
  - export KUBECONFIG=$(pwd)/data/${CI_ENVIRONMENT_SLUG}/kubeconfig
  - mkdir -p ./data ; touch ./data/empty.env
  - for envfile in data/*env ; do source $envfile ; echo ----- $envfile ---- ; cat $envfile ; done
  
fluentd-master:
  image: ${CI_REGISTRY}/cncf/cross-cloud/provisioning:$CI_COMMIT_REF_SLUG
  stage: cncf-artifacts
  script:
    - RELEASE_ENV_URL="$BASE_URL/fluent/fluentd/builds/artifacts/${FLUENTD_BRANCH}/file/release.env?job=release"
    - echo $RELEASE_ENV_URL
    - FLUENTD_RELEASE_ENV=$(curl -s -L
        $RELEASE_ENV_URL
        |  sed -n 's/.*href="\([^"]*\).*/\1/p' | grep artifacts/raw | tail -1)
    - curl -s -o data/fluentd.env -L ${BASE_URL}/$FLUENTD_RELEASE_ENV
    - cat data/fluentd.env
  artifacts:
    when: always
    expire_in: 4 weeks
    paths:
      - ./data/

build:
  stage: build
  variables:
    Dockerfile: v0.14/debian
    ImageTag: "v0.14-debian-${CI_COMMIT_REF_SLUG}.${CI_PIPELINE_ID}.${CI_JOB_ID}"
    ImageName: "${CI_REGISTRY_IMAGE}"
  script:
    - apk update
    - apk add make
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - make image DOCKERFILE=$Dockerfile VERSION=$ImageTag || sleep 999999
    - docker tag fluent/fluentd:${ImageTag} ${ImageName}:${ImageTag}
    - echo make test DOCKERFILE=$Dockerfile VERSION=$ImageTag || sleep 999999
    - docker push "${ImageName}:${ImageTag}"
